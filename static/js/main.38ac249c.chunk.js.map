{"version":3,"sources":["components/Logo/Logo.tsx","components/Button/Button.tsx","components/Loading/Loading.tsx","utils/time.ts","services/spotify.ts","components/Link/Link.tsx","pages/Login/Login.tsx","components/Profile/Profile.tsx","components/Playlist/Playlist.tsx","pages/Playlists/Playlists.tsx","components/SearchBar/SearchBar.tsx","components/Back/Back.tsx","components/PlaylistItems/PlaylistItems.tsx","pages/Playlist/Playlist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","width","height","color","opacity","className","viewBox","id","clipPath","d","fill","Button","label","type","Loading","x","y","transform","convertMillisecondsToMinutesAndSeconds","milliseconds","minutes","Math","floor","seconds","toFixed","slice","SpotifyService","clientId","process","REACT_APP_CLIENT_ID","BASE_URL","accessToken","user","Boolean","this","location","window","scopes","encodeURIComponent","redirectTo","protocol","host","port","token","Promise","resolve","reject","a","axios","method","url","headers","Authorization","data","avatar","images","name","display_name","username","followers","total","playlists","response","items","forEach","playlist","push","amount","tracks","image","item","track","artist","artists","map","join","time","duration_ms","Link","href","children","Login","history","hash","split","replace","setAccessToken","setUserInformation","then","getAuthURI","Profile","minimal","src","alt","Playlist","onClick","Playlists","useEffect","getUserPlaylist","useState","setPlaylists","getAllPlaylists","goToPlaylistPage","pathname","state","getUserInformation","key","SearchBar","placeholder","onSearch","toUpperCase","onChange","evt","target","value","Back","PlaylistItems","index","getPlaylistData","getPlaylistInformation","musics","setMusics","filtered","setFiltered","goBack","length","filter","toLowerCase","includes","PrivateRoute","Component","path","render","props","hasAccessToken","to","App","exact","component","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38ac249c.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Logo {\n  width: number,\n  height: number,\n  color?: string,\n  opacity?: number,\n  className?: string\n}\n\nexport const Logo = ({ width, height, color = \"#1AB16A\", opacity = 1, className }: Logo) => (\n  <svg viewBox=\"0 0 700 700\" width={width} height={height} opacity={opacity} className={className}>\n    <defs>\n      <clipPath id=\"_clipPath_sxS70SyISXKPYOUo6m0B2aYomjjF4cMZ\">\n        <rect width=\"700\" height=\"700\"/>\n      </clipPath>\n    </defs>\n    <g clipPath=\"url(#_clipPath_sxS70SyISXKPYOUo6m0B2aYomjjF4cMZ)\">\n      <path\n        d=\" M 350.127 22.873 C 158.006 22.873 2.254 169.332 2.254 349.994 C 2.254 530.676 158.006 677.127 350.127 677.127 C 542.256 677.127 698 530.676 698 349.994 C 698 169.344 542.264 22.889 350.123 22.889 L 350.127 22.873 Z  M 509.659 494.675 C 503.411 504.312 490.06 507.332 479.846 501.461 C 398.156 454.511 295.335 443.905 174.244 469.917 C 162.575 472.433 150.944 465.554 148.285 454.585 C 145.614 443.612 152.896 432.675 164.594 430.175 C 297.109 401.686 410.776 413.948 502.469 466.636 C 512.687 472.535 515.928 485.074 509.655 494.683 L 509.659 494.675 Z  M 552.238 405.616 C 544.37 417.62 527.679 421.386 514.931 414.014 C 421.444 359.975 278.889 344.322 168.287 375.893 C 153.943 379.967 138.793 372.365 134.44 358.9 C 130.12 345.412 138.208 331.193 152.527 327.092 C 278.864 291.044 435.921 308.505 543.303 370.557 C 556.056 377.94 560.085 393.643 552.234 405.62 L 552.238 405.616 Z  M 555.894 312.865 C 443.759 250.243 258.796 244.485 151.75 275.036 C 134.56 279.939 116.382 270.814 111.173 254.649 C 105.964 238.477 115.659 221.395 132.861 216.481 C 255.742 181.402 460.018 188.18 589.101 260.239 C 604.563 268.868 609.635 287.646 600.471 302.165 C 591.332 316.705 571.31 321.498 555.898 312.865 L 555.894 312.865 Z \"\n        fill={color}\n      />\n    </g>\n  </svg>\n);\n","import React from 'react';\nimport './Button.scss';\n\ninterface Button {\n  label: string,\n  className?: string,\n}\n\nexport const Button = ({ label, className = '' }: Button) => (\n  <button type=\"button\" className={`button ${className}`}>\n    {label}\n  </button>\n);\n","import React from 'react';\nimport './Loading.scss';\n\nexport const Loading = ({ width, height }: { width: number, height: number }) => (\n  <svg viewBox=\"0 0 512.001 512.001\" width={width} height={height} className=\"loading\">\n    <defs>\n      <clipPath id=\"_clipPath_fskM7PJtNtaVAuu87nURuGGzdm3Ev1Ls\">\n        <rect width=\"512.001\" height=\"512.001\" />\n      </clipPath>\n    </defs>\n    <g clipPath=\"url(#_clipPath_fskM7PJtNtaVAuu87nURuGGzdm3Ev1Ls)\">\n      <clipPath id=\"_clipPath_alg5W4kaaVWy8238tpAQgXzZf5BBbDnH\">\n        <rect x=\"0\" y=\"0\" width=\"512.001\" height=\"512.001\" transform=\"matrix(1,0,0,1,0,0)\" fill=\"rgb(255,255,255)\" />\n      </clipPath>\n      <g clipPath=\"url(#_clipPath_alg5W4kaaVWy8238tpAQgXzZf5BBbDnH)\">\n        <g>\n          <g>\n            <g>\n              <path d=\" M 10.407 187.915 C 22.137 145.439 44.899 106.426 76.232 75.092 C 124.656 26.669 189.041 0 257.524 0 C 326.007 0 390.391 26.669 438.816 75.094 L 445.427 81.705 L 445.427 19.991 C 445.427 8.95 454.377 0 465.418 0 C 476.459 0 485.409 8.95 485.409 19.991 L 485.409 93.112 C 485.33 108.951 479.168 123.87 468.056 135.123 C 456.905 146.415 442.03 152.739 426.17 152.93 L 354.469 152.931 C 343.428 152.931 334.478 143.981 334.478 132.94 C 334.478 121.899 343.428 112.949 354.469 112.949 L 420.129 112.949 L 410.544 103.364 C 369.671 62.491 315.327 39.981 257.524 39.981 C 199.721 39.981 145.377 62.491 104.504 103.364 C 78.051 129.817 58.84 162.735 48.947 198.558 C 46.5 207.421 38.457 213.233 29.689 213.232 C 27.928 213.232 26.136 212.997 24.355 212.505 C 13.713 209.568 7.467 198.558 10.407 187.915 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 301.666 468.85 C 307.595 467.559 313.542 465.996 319.339 464.205 C 329.887 460.947 341.081 466.854 344.341 477.404 C 347.601 487.953 341.691 499.146 331.143 502.406 C 324.263 504.531 317.208 506.385 310.173 507.918 C 308.739 508.23 307.31 508.38 305.901 508.38 C 296.704 508.38 288.424 501.992 286.388 492.637 C 284.038 481.848 290.878 471.198 301.666 468.85 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 384.242 431.233 C 389.115 427.608 393.895 423.727 398.449 419.702 C 406.722 412.388 419.356 413.169 426.666 421.44 C 433.979 429.712 433.2 442.347 424.929 449.658 C 419.537 454.424 413.878 459.017 408.109 463.31 C 404.525 465.977 400.34 467.264 396.191 467.264 C 390.088 467.264 384.06 464.478 380.136 459.205 C 373.545 450.346 375.383 437.823 384.242 431.233 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 444.161 362.977 C 447.125 357.668 449.893 352.173 452.39 346.642 C 456.935 336.58 468.777 332.107 478.838 336.651 C 488.9 341.195 493.373 353.037 488.829 363.098 C 485.867 369.655 482.584 376.171 479.07 382.464 C 475.411 389.021 468.608 392.714 461.597 392.714 C 458.299 392.714 454.955 391.896 451.871 390.175 C 442.231 384.796 438.779 372.618 444.161 362.977 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 470.654 276.173 C 471.16 270.135 471.417 263.981 471.417 257.884 C 471.417 246.843 480.367 237.893 491.408 237.893 C 502.449 237.893 511.399 246.843 511.399 257.884 C 511.399 265.091 511.095 272.368 510.496 279.512 C 509.621 289.946 500.883 297.835 490.598 297.835 C 490.037 297.835 489.473 297.812 488.905 297.764 C 477.902 296.842 469.731 287.175 470.654 276.173 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 100.054 436.43 C 106.583 427.528 119.092 425.6 127.998 432.129 C 132.901 435.724 138.015 439.151 143.194 442.312 C 152.619 448.064 155.595 460.367 149.842 469.791 C 146.074 475.963 139.498 479.37 132.76 479.37 C 129.21 479.37 125.615 478.424 122.364 476.439 C 116.224 472.692 110.165 468.632 104.356 464.372 C 95.452 457.844 93.526 445.334 100.054 436.43 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 18.784 259.616 C 29.796 258.621 39.504 266.718 40.504 277.714 C 41.055 283.767 41.87 289.865 42.929 295.838 C 44.855 306.709 37.603 317.084 26.732 319.011 C 25.552 319.22 24.379 319.321 23.221 319.321 C 13.708 319.321 5.277 312.506 3.56 302.814 C 2.306 295.735 1.339 288.509 0.686 281.338 C -0.315 270.342 7.789 260.617 18.784 259.616 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 40.355 356.782 C 49.956 351.331 62.158 354.699 67.609 364.3 C 70.604 369.576 73.864 374.792 77.299 379.804 C 83.541 388.91 81.22 401.353 72.113 407.596 C 68.658 409.965 64.723 411.099 60.828 411.099 C 54.458 411.099 48.195 408.059 44.321 402.409 C 40.25 396.47 36.387 390.287 32.837 384.034 C 27.387 374.433 30.753 362.232 40.355 356.782 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n          <g>\n            <g>\n              <path d=\" M 187.172 484.618 C 189.445 473.811 200.048 466.896 210.85 469.168 C 216.779 470.415 222.846 471.423 228.881 472.166 C 239.84 473.513 247.632 483.488 246.284 494.447 C 245.039 504.577 236.42 512.001 226.468 512.001 C 225.655 512.001 224.831 511.951 224.004 511.85 C 216.848 510.97 209.654 509.775 202.621 508.296 C 191.816 506.024 184.9 495.422 187.172 484.618 Z \" fill=\"rgb(26,177,106)\" />\n            </g>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n)","export const convertMillisecondsToMinutesAndSeconds = (milliseconds: number): string => {\n  const minutes = Math.floor(milliseconds / 60000);\n  const seconds = ((milliseconds % 60000) / 1000).toFixed(0);\n  return `${minutes}:${(\"0\" + seconds).slice(-2)}`;\n}\n","import axios from 'axios';\nimport { User, Playlists, Playlist } from './spotifyTypes';\nimport { convertMillisecondsToMinutesAndSeconds } from '../utils/time';\nimport { PlaylistItem } from '../components/PlaylistItems/PlaylistItems';\n\nclass SpotifyProvider {\n  private clientId = process.env.REACT_APP_CLIENT_ID;\n  readonly BASE_URL = 'https://api.spotify.com/v1';\n  private accessToken = '';\n  private user: User;\n\n  public hasAccessToken(): boolean {\n    return Boolean(this.accessToken);\n  }\n\n  public getAuthURI(): string {\n    const { location } = window;\n    const responseWith = 'response_type=token';\n    const clientId = `client_id=${this.clientId}`;\n    const scopes = 'scope=' + encodeURIComponent('user-read-private user-read-email playlist-read-collaborative');\n    const redirectTo = `redirect_uri=${encodeURIComponent(\n      location.protocol + '//' + location.host + (location.port ? '/' : '')\n    )}`;\n    const showDialog = 'show_dialog=true';\n    return `https://accounts.spotify.com/authorize?${responseWith}&${clientId}&${scopes}&${redirectTo}&${showDialog}`;\n  }\n\n  public setAccessToken(token: string) {\n    this.accessToken = token;\n  }\n\n  public setUserInformation(): Promise<User> {\n    return new Promise(async (resolve, reject) => {\n      const user = await axios({\n        method: 'get',\n        url: `${this.BASE_URL}/me`,\n        headers: { Authorization: `Bearer ${this.accessToken}` }\n      });\n\n      if (!user) reject(user);\n      this.user = user.data;\n      resolve(this.user);\n    })\n  }\n\n  public getUserInformation() {\n    return {\n      avatar: this.user.images[0].url,\n      name: this.user.display_name,\n      username: this.user.id,\n      followers: this.user.followers.total\n    }\n  }\n\n  public async getAllPlaylists() {\n    const playlists = await axios({\n      method: 'get',\n      url: `${this.BASE_URL}/users/${this.user.id}/playlists`,\n      headers: { Authorization: `Bearer ${this.accessToken}` }\n    });\n\n    if (!playlists) return [];\n\n    const data: Playlists = playlists.data;\n    const response: { id: string, name: string, amount: number, image: string }[] = [];\n\n    data.items.forEach(playlist => {\n      response.push({\n        id: playlist.id,\n        name: playlist.name,\n        amount: playlist.tracks.total,\n        image: playlist.images[0].url\n      });\n    });\n\n    return response;\n  }\n\n  public async getPlaylistInformation(id: string) {\n    const data = await axios({\n      method: 'get',\n      url: `https://api.spotify.com/v1/playlists/${id}/tracks`,\n      headers: { Authorization: `Bearer ${this.accessToken}` }\n    });\n\n    if (!data) return [];\n\n    const playlist: Playlist = data.data;\n    const response: PlaylistItem[] = [];\n\n    playlist.items.forEach(item => {\n      response.push({\n        name: item.track.name,\n        artist: item.track.artists.map(artist => artist.name).join(', '),\n        time: convertMillisecondsToMinutesAndSeconds(item.track.duration_ms)\n      });\n    })\n\n    return response;\n  }\n}\n\nexport const SpotifyService = new SpotifyProvider();\n","import React from 'react';\n\ninterface Link {\n  href: string,\n  className?: string\n}\n\nexport const Link: React.FC<Link> = ({ href, className, children }) => (\n  <a href={href} className={className}>\n    {children}\n  </a>\n);\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Logo } from '../../components/Logo/Logo';\nimport { Button } from '../../components/Button/Button';\nimport { Loading } from '../../components/Loading/Loading';\nimport { SpotifyService } from '../../services/spotify';\nimport { Link } from '../../components/Link/Link';\nimport './Login.scss';\n\nexport const Login = ({ history }: RouteComponentProps) => {\n  const token = history.location.hash.split('&')[0].replace('#access_token=', '');\n\n  if (token) {\n    SpotifyService.setAccessToken(token);\n    SpotifyService.setUserInformation().then(() => {\n      history.push('/playlists');\n    });\n\n    return (\n      <div className=\"login-loading\">\n        <Loading width={100} height={100} />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"login\">\n      <Logo height={50} width={50} />\n\n      <section className=\"login__content\">\n        <div className=\"login__content__description\">\n          <span className=\"login__content__description__title\">\n            Músicas para todos.\n          </span>\n\n          <span className=\"login__content__description__subtitle\">\n            Milhões de músicas à sua escolha. E nem precisa de cartão de crédito.\n          </span>\n\n          <Link href={SpotifyService.getAuthURI()}>\n            <Button label=\"Conectar com Spotify\" className=\"button\" />\n          </Link>\n        </div>\n\n        <Logo height={500} width={500} opacity={0.3} />\n      </section>\n    </div>\n  )\n};\n","import React from 'react';\nimport './Profile.scss';\n\ninterface Profile {\n  avatar: string,\n  name: string,\n  username: string,\n  followers: number,\n  className?: string,\n  minimal?: boolean\n}\n\nexport const Profile = ({ avatar, name, username, followers, className = '', minimal }: Profile) => (\n  <div className={`profile ${minimal ? 'profile--minimal' : ''} ${className}`}>\n    <img src={avatar} alt={name} className={`profile__avatar ${minimal ? 'profile--minimal__avatar' : ''}`} />\n\n    <div className={`profile__informations ${minimal ? 'profile--minimal__informations' : ''}`}>\n      <span className={`profile__informations__name ${minimal ? 'profile--minimal__informations__name' : ''}`}>\n        {name}\n      </span>\n\n      <span className={`profile__informations__account ${minimal ? 'profile--minimal__informations__account' : ''}`}>\n        {username} | followers: {followers}\n      </span>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './Playlist.scss';\n\ninterface Playlist {\n  name: string,\n  amount: number,\n  image: string,\n  id?: string,\n  onClick?: Function,\n  className?: string\n}\n\nexport const Playlist = ({ id, name, amount, image, onClick, className = '' }: Playlist) => (\n  <div className={`playlistItem ${className}`}>\n    <img\n      className=\"playlistItem__image\"\n      onClick={() => onClick && onClick({ id, name, amount, image })}\n      src={image}\n      alt={name}\n    />\n\n    <span className=\"playlistItem__name\" onClick={() => onClick && onClick({ id, name, amount, image })}>\n      {name}\n    </span>\n\n    <span className=\"playlistItem__amount\">\n      {amount} {amount > 1 ? 'musics' : 'music'}\n    </span>\n  </div>\n);\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Logo } from '../../components/Logo/Logo';\nimport { Profile } from '../../components/Profile/Profile';\nimport { Playlist } from '../../components/Playlist/Playlist';\nimport { SpotifyService } from '../../services/spotify';\nimport './Playlists.scss';\n\nexport interface Playlist {\n  id: string,\n  name: string,\n  amount: number,\n  image: string\n}\n\nexport const Playlists = ({ history }: RouteComponentProps) => {\n  useEffect(() => {\n    getUserPlaylist()\n  }, []);\n\n  const [playlists, setPlaylists] = useState<Playlist[]>([]);\n\n  const getUserPlaylist = async () => {\n    const playlists = await SpotifyService.getAllPlaylists();\n    setPlaylists(playlists);\n  }\n\n  const goToPlaylistPage = ({ id, name, amount, image }: Playlist) => {\n    history.push({\n      pathname: '/playlist',\n      state: { id, name, amount, image }\n    });\n  }\n\n  return (\n    <div className=\"playlists\">\n      <Logo height={50} width={50} className=\"playlists__logo\" />\n\n      <section className=\"playlists__content\">\n        <Profile {...SpotifyService.getUserInformation()} />\n\n        <div className=\"playlists__content__items\">\n          {\n            playlists.map(playlist => (\n              <Fragment key={playlist.id}>\n                <Playlist {...playlist} onClick={goToPlaylistPage} />\n              </Fragment>\n            ))\n          }\n        </div>\n      </section>\n    </div>\n  )\n}","import React from 'react';\nimport './SearchBar.scss';\n\ninterface SearchBar {\n  placeholder: string,\n  onSearch: Function\n}\n\nexport const SearchBar = ({ placeholder, onSearch }: SearchBar) => (\n  <div className=\"searchBar\">\n    <input\n      type=\"text\"\n      placeholder={placeholder.toUpperCase()}\n      onChange={(evt) => onSearch(evt.target.value)}\n      className=\"searchBar__input\"\n    />\n  </div>\n);\n","import React from 'react';\n\ninterface Back {\n  width: number,\n  height: number,\n  className?: string,\n  onClick: Function\n}\n\nexport const Back: React.FC<Back> = ({ width, height, className = '', onClick }) => (\n  <svg viewBox=\"0 0 100 100\" width={width} height={height} onClick={() => onClick()} className={className}>\n    <defs>\n      <clipPath id=\"_clipPath_H57vw0ItnefVW9VsGaQPRk3UqDZ13WvD\">\n        <rect width=\"100\" height=\"100\"/>\n      </clipPath>\n    </defs>\n    <g clipPath=\"url(#_clipPath_H57vw0ItnefVW9VsGaQPRk3UqDZ13WvD)\">\n      <g>\n        <g>\n          <path d=\" M 50 1.852 L 50 1.852 C 76.591 1.852 98.148 23.409 98.148 50 L 98.148 50 C 98.148 76.591 76.591 98.148 50 98.148 L 50 98.148 C 23.409 98.148 1.852 76.591 1.852 50 L 1.852 50 C 1.852 23.409 23.409 1.852 50 1.852 Z \" fill=\"rgb(79,186,111)\"/>\n        </g>\n      </g>\n      <g>\n        <path d=\" M 48.929 50.015 L 65.198 35.4 C 66.025 34.658 66.437 33.751 66.437 32.678 C 66.437 31.606 66.025 30.699 65.198 29.957 L 62.688 27.701 C 61.863 26.96 60.852 26.589 59.659 26.589 C 58.465 26.589 57.455 26.96 56.629 27.701 L 34.801 47.278 C 33.975 48.02 33.563 48.927 33.563 50 C 33.563 51.073 33.975 51.979 34.801 52.721 L 56.629 72.298 C 57.455 73.04 58.465 73.411 59.659 73.411 C 60.852 73.411 61.863 73.04 62.688 72.298 L 65.198 70.043 C 66.025 69.302 66.437 68.399 66.437 67.336 C 66.437 66.274 66.025 65.362 65.198 64.6 L 48.929 50.015 Z \" fill=\"rgb(46,46,46)\"/>\n      </g>\n    </g>\n  </svg>\n);\n","import React from 'react';\nimport './PlaylistItems.scss';\n\nexport interface PlaylistItem {\n  name: string,\n  artist: string,\n  time: string\n}\n\nexport const PlaylistItems = ({ items, className = '' }: { items: PlaylistItem[], className?: string }) => (\n  <div className={`playlistItems ${className}`}>\n    {items.map(({ name, artist, time }: PlaylistItem, index: number) => (\n      <div key={index}>\n        <div className=\"playlistItems__nameAndTime\">\n          <span className=\"playlistItems__nameAndTime__name\">{name}</span>\n          <span className=\"playlistItems__nameAndTime__time\">{time}</span>\n        </div>\n        <span className=\"playlistItems__artist\">{artist}</span>\n      </div>\n    ))}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Logo } from '../../components/Logo/Logo';\nimport { Playlist as PlaylistInformation } from '../../components/Playlist/Playlist';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Profile } from '../../components/Profile/Profile';\nimport { Back } from '../../components/Back/Back';\nimport { PlaylistItems, PlaylistItem } from '../../components/PlaylistItems/PlaylistItems';\nimport { SpotifyService } from '../../services/spotify';\nimport './Playlist.scss';\n\nexport const Playlist = ({ history }: RouteComponentProps) => {\n  useEffect(() => {\n    getPlaylistData();\n    // eslint-disable-next-line\n  }, []);\n\n  const getPlaylistData = async () => {\n    const musics = await SpotifyService.getPlaylistInformation(history.location.state.id);\n    setMusics(musics);\n  }\n\n  const [musics, setMusics] = useState<PlaylistItem[]>([]);\n  const [filtered, setFiltered] = useState<PlaylistItem[]>([]);\n\n  const onSearch = (value: string) => {\n    if (!value.length) return setFiltered([]);\n\n    const items = musics.filter(({ name, artist }) => (\n      name.toLowerCase().includes(value.toLowerCase()) ||\n      artist.toLowerCase().includes(value.toLowerCase())\n    ));\n\n    setFiltered(items);\n  }\n\n  return (\n    <div className=\"playlist\">\n      <div className=\"playlist__info\">\n        <Logo height={50} width={50} className=\"playlist__info__logo\" />\n\n        <PlaylistInformation\n          name={history.location.state.name}\n          image={history.location.state.image}\n          amount={history.location.state.amount}\n          className=\"playlist__info__playlist\"\n        />\n      </div>\n\n      <section className=\"playlist__content\">\n        <Back\n          height={35}\n          width={35}\n          className=\"playlist__content__backNavigation\"\n          onClick={() => history.goBack()}\n        />\n\n        <SearchBar onSearch={onSearch} placeholder=\"Pesquisar...\" />\n\n        <PlaylistItems\n          items={filtered.length ? filtered : musics}\n          className=\"playlist__content__tracks\"\n        />\n      </section>\n\n      <Profile\n        {...SpotifyService.getUserInformation()}\n        className=\"playlist__profile\"\n        minimal\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, RouteComponentProps } from \"react-router-dom\"\nimport { Login } from './pages/Login/Login';\nimport { Playlists } from './pages/Playlists/Playlists';\nimport { Playlist } from './pages/Playlist/Playlist';\nimport { SpotifyService } from './services/spotify';\n\nconst PrivateRoute = ({ Component, path }: { Component: React.FC<RouteComponentProps>, path: string }) => (\n  <Route path={path} render={props => (\n    SpotifyService.hasAccessToken() ? <Component {...props} /> : <Redirect to=\"/\" />\n  )} />\n);\n\nconst App: React.FC = () => (\n  <Router>\n    <Route path=\"/\" exact component={Login} />\n    <PrivateRoute path=\"/playlists\" Component={Playlists} />\n    <PrivateRoute path=\"/playlist\" Component={Playlist} />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}